// <auto-generated />
using System;
using InvenLock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvenLock.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221229170243_Inicio")]
    partial class Inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvenLock.Models.EstoqueEquipamento", b =>
                {
                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFimEquip")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Fabricante")
                        .HasColumnType("int");

                    b.Property<string>("NomeEquip")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("EstoqueEquipamentoId");

                    b.ToTable("EstoqueEquipamentos");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.Property<int>("FormEmprestimoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Devolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Emissao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("FormEmprestimoId");

                    b.HasIndex("EstoqueEquipamentoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FormEmprestimos");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Admissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("CelPessoal")
                        .HasColumnType("char(11)");

                    b.Property<string>("Cpf")
                        .HasColumnType("char(11)");

                    b.Property<DateTime?>("Demissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailCorp")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("EmailPessoal")
                        .HasColumnType("varchar(70)");

                    b.Property<byte[]>("FotoFuncionario")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Ramal")
                        .HasColumnType("char(4)");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("FuncionarioId");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            FuncionarioId = 1,
                            Admissao = new DateTime(2022, 12, 29, 14, 2, 42, 996, DateTimeKind.Local).AddTicks(6896),
                            CelPessoal = "11955008212",
                            Cpf = "12345678901",
                            EmailCorp = "marzogildan@invenlock.com",
                            EmailPessoal = "marzogildan@gmail.com",
                            Nome = "Dan",
                            PasswordHash = new byte[] { 177, 241, 203, 59, 188, 130, 252, 25, 252, 71, 76, 97, 128, 205, 184, 227, 192, 8, 240, 201, 208, 83, 15, 35, 188, 201, 183, 131, 101, 97, 233, 181, 195, 249, 11, 205, 59, 52, 198, 247, 127, 206, 43, 251, 98, 70, 250, 45, 46, 114, 150, 140, 225, 241, 112, 237, 187, 200, 203, 95, 152, 160, 176, 134 },
                            PasswordSalt = new byte[] { 43, 60, 194, 249, 158, 102, 35, 204, 100, 51, 177, 228, 173, 54, 30, 22, 209, 186, 117, 112, 57, 218, 100, 241, 60, 112, 218, 90, 115, 206, 157, 164, 194, 149, 40, 229, 9, 251, 99, 8, 42, 182, 58, 150, 226, 87, 14, 70, 140, 82, 69, 122, 105, 3, 104, 70, 245, 212, 132, 40, 241, 60, 9, 49, 57, 194, 185, 1, 195, 53, 10, 165, 203, 141, 104, 99, 182, 68, 1, 172, 57, 138, 46, 95, 3, 175, 31, 84, 114, 112, 80, 5, 2, 64, 45, 115, 255, 114, 66, 60, 114, 32, 251, 76, 89, 119, 56, 35, 187, 21, 104, 152, 28, 142, 163, 151, 187, 75, 175, 81, 49, 75, 190, 235, 47, 122, 193, 118 },
                            Ramal = "1010",
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.Property<int>("ManutEquipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ManutEquipId");

                    b.HasIndex("EstoqueEquipamentoId");

                    b.ToTable("ManutEquips");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescOcorrencia")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipamento")
                        .HasColumnType("int");

                    b.Property<int?>("ManutEquipId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("OcorrenciaId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ManutEquipId")
                        .IsUnique()
                        .HasFilter("[ManutEquipId] IS NOT NULL");

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithMany("FormEmprestimo")
                        .HasForeignKey("EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("FormEmprestimo")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithMany()
                        .HasForeignKey("EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvenLock.Models.ManutEquip", "ManutEquip")
                        .WithOne("Ocorrencia")
                        .HasForeignKey("InvenLock.Models.Ocorrencia", "ManutEquipId");

                    b.Navigation("Funcionario");

                    b.Navigation("ManutEquip");
                });

            modelBuilder.Entity("InvenLock.Models.EstoqueEquipamento", b =>
                {
                    b.Navigation("FormEmprestimo");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Navigation("FormEmprestimo");

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.Navigation("Ocorrencia");
                });
#pragma warning restore 612, 618
        }
    }
}
