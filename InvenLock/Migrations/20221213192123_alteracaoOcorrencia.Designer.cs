// <auto-generated />
using System;
using InvenLock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvenLock.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221213192123_alteracaoOcorrencia")]
    partial class alteracaoOcorrencia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvenLock.Models.EstoqueEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFimEquip")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Fabricante")
                        .HasColumnType("int");

                    b.Property<string>("NomeEquip")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstoqueEquipamentos");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Devolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Emissao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FormEmprestimos");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Admissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("CelPessoal")
                        .HasColumnType("char(11)");

                    b.Property<string>("Cpf")
                        .HasColumnType("char(11)");

                    b.Property<DateTime?>("Demissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailCorp")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("EmailPessoal")
                        .HasColumnType("varchar(70)");

                    b.Property<byte[]>("FotoFuncionario")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Ramal")
                        .HasColumnType("char(4)");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Admissao = new DateTime(2022, 12, 13, 16, 21, 22, 397, DateTimeKind.Local).AddTicks(274),
                            CelPessoal = "11955008212",
                            Cpf = "12345678901",
                            EmailCorp = "marzogildan@invenlock.com",
                            EmailPessoal = "marzogildan@gmail.com",
                            Nome = "Dan",
                            PasswordHash = new byte[] { 66, 250, 107, 232, 243, 170, 145, 252, 123, 29, 187, 240, 63, 191, 89, 163, 165, 34, 188, 197, 164, 105, 48, 75, 178, 238, 158, 35, 72, 229, 213, 96, 14, 144, 135, 71, 49, 36, 250, 214, 21, 151, 77, 212, 67, 64, 221, 183, 165, 221, 239, 177, 21, 146, 41, 52, 240, 43, 138, 139, 236, 0, 234, 190 },
                            PasswordSalt = new byte[] { 181, 201, 186, 16, 47, 177, 199, 122, 184, 76, 161, 7, 30, 168, 239, 9, 163, 13, 127, 118, 125, 130, 211, 213, 140, 175, 214, 249, 83, 74, 121, 217, 74, 60, 99, 231, 186, 2, 40, 60, 71, 76, 183, 65, 164, 250, 162, 87, 195, 17, 178, 164, 234, 6, 187, 39, 15, 212, 160, 126, 211, 221, 94, 96, 39, 76, 106, 233, 15, 92, 95, 162, 155, 141, 251, 5, 211, 103, 149, 55, 9, 65, 36, 72, 23, 220, 125, 34, 68, 50, 92, 17, 30, 134, 190, 8, 160, 5, 164, 172, 179, 46, 195, 100, 24, 27, 136, 21, 165, 1, 93, 215, 210, 74, 179, 29, 213, 99, 187, 100, 126, 202, 221, 166, 77, 212, 255, 78 },
                            Ramal = "1010",
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId")
                        .IsUnique();

                    b.ToTable("ManutEquips");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescOcorrencia")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipamento")
                        .HasColumnType("int");

                    b.Property<int>("ManutEquipId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ManutEquipId")
                        .IsUnique();

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("InvenLock.Models.SucataEquip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("DsOcorrido")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId")
                        .IsUnique();

                    b.ToTable("SucataEquips");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithMany("FormEmprestimo")
                        .HasForeignKey("EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("FormEmprestimo")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithOne("ManutEquip")
                        .HasForeignKey("InvenLock.Models.ManutEquip", "EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvenLock.Models.ManutEquip", "ManutEquip")
                        .WithOne("Ocorrencia")
                        .HasForeignKey("InvenLock.Models.Ocorrencia", "ManutEquipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("ManutEquip");
                });

            modelBuilder.Entity("InvenLock.Models.SucataEquip", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithOne("SucataEquip")
                        .HasForeignKey("InvenLock.Models.SucataEquip", "EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");
                });

            modelBuilder.Entity("InvenLock.Models.EstoqueEquipamento", b =>
                {
                    b.Navigation("FormEmprestimo");

                    b.Navigation("ManutEquip");

                    b.Navigation("SucataEquip");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Navigation("FormEmprestimo");

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.Navigation("Ocorrencia");
                });
#pragma warning restore 612, 618
        }
    }
}
