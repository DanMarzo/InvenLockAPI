// <auto-generated />
using System;
using InvenLock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvenLock.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221213231758__Pois_Interrogacao")]
    partial class PoisInterrogacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvenLock.Models.EstoqueEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFimEquip")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Fabricante")
                        .HasColumnType("int");

                    b.Property<string>("NomeEquip")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstoqueEquipamentos");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Devolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Emissao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FormEmprestimos");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Admissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("CelPessoal")
                        .HasColumnType("char(11)");

                    b.Property<string>("Cpf")
                        .HasColumnType("char(11)");

                    b.Property<DateTime?>("Demissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailCorp")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("EmailPessoal")
                        .HasColumnType("varchar(70)");

                    b.Property<byte[]>("FotoFuncionario")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Ramal")
                        .HasColumnType("char(4)");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Admissao = new DateTime(2022, 12, 13, 20, 17, 57, 544, DateTimeKind.Local).AddTicks(2299),
                            CelPessoal = "11955008212",
                            Cpf = "12345678901",
                            EmailCorp = "marzogildan@invenlock.com",
                            EmailPessoal = "marzogildan@gmail.com",
                            Nome = "Dan",
                            PasswordHash = new byte[] { 103, 239, 47, 147, 112, 6, 94, 54, 163, 132, 151, 209, 247, 139, 94, 22, 145, 103, 48, 208, 151, 102, 41, 37, 137, 8, 197, 86, 11, 17, 240, 150, 48, 115, 173, 170, 35, 246, 164, 142, 240, 183, 86, 190, 251, 165, 187, 206, 25, 29, 194, 9, 131, 240, 9, 230, 201, 148, 116, 136, 110, 34, 83, 233 },
                            PasswordSalt = new byte[] { 18, 33, 86, 187, 101, 46, 60, 215, 92, 106, 154, 65, 240, 117, 198, 73, 192, 228, 75, 93, 125, 100, 44, 91, 69, 26, 2, 90, 19, 69, 42, 40, 46, 76, 200, 39, 205, 83, 117, 53, 142, 96, 93, 223, 65, 158, 13, 36, 132, 228, 95, 221, 23, 131, 137, 127, 67, 140, 186, 245, 124, 221, 43, 216, 202, 21, 189, 19, 179, 93, 210, 8, 192, 23, 4, 233, 51, 120, 198, 235, 37, 117, 168, 71, 97, 153, 120, 114, 139, 88, 57, 98, 50, 129, 175, 21, 76, 234, 104, 141, 203, 195, 59, 43, 197, 157, 24, 26, 194, 40, 193, 149, 85, 149, 79, 245, 189, 30, 130, 212, 210, 121, 188, 117, 155, 106, 27, 80 },
                            Ramal = "1010",
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId")
                        .IsUnique();

                    b.ToTable("ManutEquips");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescOcorrencia")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipamento")
                        .HasColumnType("int");

                    b.Property<int?>("ManutEquipId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ManutEquipId")
                        .IsUnique()
                        .HasFilter("[ManutEquipId] IS NOT NULL");

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("InvenLock.Models.SucataEquip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("DsOcorrido")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId")
                        .IsUnique();

                    b.ToTable("SucataEquips");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithMany("FormEmprestimo")
                        .HasForeignKey("EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("FormEmprestimo")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithOne("ManutEquip")
                        .HasForeignKey("InvenLock.Models.ManutEquip", "EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvenLock.Models.ManutEquip", "ManutEquip")
                        .WithOne("Ocorrencia")
                        .HasForeignKey("InvenLock.Models.Ocorrencia", "ManutEquipId");

                    b.Navigation("Funcionario");

                    b.Navigation("ManutEquip");
                });

            modelBuilder.Entity("InvenLock.Models.SucataEquip", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithOne("SucataEquip")
                        .HasForeignKey("InvenLock.Models.SucataEquip", "EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");
                });

            modelBuilder.Entity("InvenLock.Models.EstoqueEquipamento", b =>
                {
                    b.Navigation("FormEmprestimo");

                    b.Navigation("ManutEquip");

                    b.Navigation("SucataEquip");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Navigation("FormEmprestimo");

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.Navigation("Ocorrencia");
                });
#pragma warning restore 612, 618
        }
    }
}
