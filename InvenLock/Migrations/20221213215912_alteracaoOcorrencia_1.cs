using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace InvenLock.Migrations
{
    /// <inheritdoc />
    public partial class alteracaoOcorrencia1 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Funcionarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "Admissao", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 12, 13, 18, 59, 11, 194, DateTimeKind.Local).AddTicks(2757), new byte[] { 94, 109, 187, 253, 98, 28, 163, 125, 60, 144, 219, 83, 199, 206, 86, 157, 96, 217, 122, 79, 40, 102, 151, 103, 200, 238, 82, 236, 111, 181, 255, 85, 60, 142, 219, 199, 68, 45, 41, 27, 17, 23, 222, 35, 183, 242, 109, 149, 52, 137, 56, 128, 136, 137, 51, 52, 23, 249, 173, 20, 187, 220, 1, 80 }, new byte[] { 155, 46, 59, 23, 122, 94, 8, 208, 211, 15, 37, 208, 52, 83, 178, 46, 110, 175, 20, 5, 136, 44, 173, 47, 91, 69, 135, 141, 114, 132, 94, 32, 88, 140, 91, 239, 207, 134, 140, 152, 240, 118, 24, 157, 222, 200, 76, 8, 154, 44, 26, 245, 66, 35, 171, 0, 168, 67, 224, 108, 8, 227, 152, 195, 246, 170, 239, 249, 123, 26, 63, 20, 68, 69, 69, 136, 56, 2, 141, 189, 142, 164, 10, 229, 209, 224, 158, 68, 241, 65, 38, 201, 7, 7, 21, 17, 117, 193, 26, 13, 183, 14, 83, 7, 243, 204, 206, 153, 21, 30, 121, 23, 212, 251, 124, 77, 205, 142, 197, 229, 114, 233, 13, 207, 183, 163, 42, 169 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Funcionarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "Admissao", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2022, 12, 13, 16, 21, 22, 397, DateTimeKind.Local).AddTicks(274), new byte[] { 66, 250, 107, 232, 243, 170, 145, 252, 123, 29, 187, 240, 63, 191, 89, 163, 165, 34, 188, 197, 164, 105, 48, 75, 178, 238, 158, 35, 72, 229, 213, 96, 14, 144, 135, 71, 49, 36, 250, 214, 21, 151, 77, 212, 67, 64, 221, 183, 165, 221, 239, 177, 21, 146, 41, 52, 240, 43, 138, 139, 236, 0, 234, 190 }, new byte[] { 181, 201, 186, 16, 47, 177, 199, 122, 184, 76, 161, 7, 30, 168, 239, 9, 163, 13, 127, 118, 125, 130, 211, 213, 140, 175, 214, 249, 83, 74, 121, 217, 74, 60, 99, 231, 186, 2, 40, 60, 71, 76, 183, 65, 164, 250, 162, 87, 195, 17, 178, 164, 234, 6, 187, 39, 15, 212, 160, 126, 211, 221, 94, 96, 39, 76, 106, 233, 15, 92, 95, 162, 155, 141, 251, 5, 211, 103, 149, 55, 9, 65, 36, 72, 23, 220, 125, 34, 68, 50, 92, 17, 30, 134, 190, 8, 160, 5, 164, 172, 179, 46, 195, 100, 24, 27, 136, 21, 165, 1, 93, 215, 210, 74, 179, 29, 213, 99, 187, 100, 126, 202, 221, 166, 77, 212, 255, 78 } });
        }
    }
}
