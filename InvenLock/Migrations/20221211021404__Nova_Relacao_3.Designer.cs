// <auto-generated />
using System;
using InvenLock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvenLock.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221211021404__Nova_Relacao_3")]
    partial class NovaRelacao3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvenLock.Models.EmprestimoEquip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("FormEmprestimoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId")
                        .IsUnique();

                    b.HasIndex("FormEmprestimoId");

                    b.ToTable("EmprestimoEquip");
                });

            modelBuilder.Entity("InvenLock.Models.EstoqueEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFimEquip")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Fabricante")
                        .HasColumnType("int");

                    b.Property<string>("NomeEquip")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstoqueEquipamentos");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Devolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Emissao")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FormEmprestimos");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Admissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cpf")
                        .HasColumnType("char(11)");

                    b.Property<DateTime?>("Demissao")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("FotoFuncionario")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Admissao = new DateTime(2022, 12, 10, 23, 14, 3, 522, DateTimeKind.Local).AddTicks(1753),
                            Cpf = "12345678901",
                            Nome = "Dan",
                            PasswordHash = new byte[] { 195, 198, 248, 164, 243, 116, 172, 127, 162, 122, 244, 94, 226, 97, 164, 249, 30, 223, 241, 212, 180, 231, 252, 149, 4, 123, 5, 9, 57, 32, 96, 42, 238, 203, 123, 177, 182, 8, 223, 9, 40, 181, 7, 47, 51, 251, 164, 156, 131, 120, 23, 113, 26, 224, 96, 149, 24, 223, 152, 114, 149, 232, 219, 179 },
                            PasswordSalt = new byte[] { 223, 156, 219, 65, 4, 94, 155, 226, 174, 55, 247, 100, 254, 89, 70, 84, 111, 110, 117, 60, 129, 137, 74, 161, 171, 81, 192, 158, 51, 113, 187, 170, 142, 117, 18, 210, 176, 250, 167, 202, 148, 189, 166, 240, 22, 46, 201, 84, 113, 50, 238, 89, 29, 139, 27, 101, 146, 52, 235, 50, 253, 50, 189, 145, 200, 151, 4, 63, 186, 194, 35, 241, 201, 68, 125, 9, 14, 221, 124, 220, 86, 149, 47, 195, 23, 158, 188, 142, 238, 246, 84, 106, 31, 226, 106, 192, 37, 10, 209, 222, 245, 231, 194, 55, 50, 255, 168, 166, 19, 214, 94, 223, 42, 209, 121, 200, 109, 168, 52, 138, 234, 59, 184, 76, 147, 89, 161, 233 },
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("InvenLock.Models.FuncionarioContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CelPessoal")
                        .HasColumnType("char(11)");

                    b.Property<string>("EmailCorporativo")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("EmailPessoal")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("RamalCorporativo")
                        .HasColumnType("char(4)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("FuncionarioContatos");
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId")
                        .IsUnique();

                    b.HasIndex("OcorrenciaId")
                        .IsUnique();

                    b.ToTable("ManutEquips");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescOcorrencia")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("InvenLock.Models.SucataEquip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("DsOcorrido")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EstoqueEquipamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueEquipamentoId")
                        .IsUnique();

                    b.ToTable("SucataEquips");
                });

            modelBuilder.Entity("InvenLock.Models.EmprestimoEquip", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithOne("EmprestimoEquip")
                        .HasForeignKey("InvenLock.Models.EmprestimoEquip", "EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvenLock.Models.FormEmprestimo", "FormEmprestimo")
                        .WithMany("EmprestimoEquip")
                        .HasForeignKey("FormEmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");

                    b.Navigation("FormEmprestimo");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("FormEmprestimo")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.FuncionarioContato", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithOne("FuncionarioContato")
                        .HasForeignKey("InvenLock.Models.FuncionarioContato", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.ManutEquip", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithOne("ManutEquip")
                        .HasForeignKey("InvenLock.Models.ManutEquip", "EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvenLock.Models.Ocorrencia", "Ocorrencia")
                        .WithOne("ManutEquip")
                        .HasForeignKey("InvenLock.Models.ManutEquip", "OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.SucataEquip", b =>
                {
                    b.HasOne("InvenLock.Models.EstoqueEquipamento", "EstoqueEquipamento")
                        .WithOne("SucataEquip")
                        .HasForeignKey("InvenLock.Models.SucataEquip", "EstoqueEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueEquipamento");
                });

            modelBuilder.Entity("InvenLock.Models.EstoqueEquipamento", b =>
                {
                    b.Navigation("EmprestimoEquip");

                    b.Navigation("ManutEquip");

                    b.Navigation("SucataEquip");
                });

            modelBuilder.Entity("InvenLock.Models.FormEmprestimo", b =>
                {
                    b.Navigation("EmprestimoEquip");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Navigation("FormEmprestimo");

                    b.Navigation("FuncionarioContato");

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.Navigation("ManutEquip");
                });
#pragma warning restore 612, 618
        }
    }
}
